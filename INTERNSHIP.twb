<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='max profit' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='415'>
        <calculation class='tableau' formula='415' />
      </column>
    </datasource>
    <datasource caption='INTERNSHIP' inline='true' name='federated.1hyspzu1yy1h2o139eryv10xnprv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='INTERNSHIP' name='textscan.1k2su430f4qvk219979410h52hzr'>
            <connection class='textscan' directory='C:/Users/shubham/Desktop/1.1 pandas' filename='INTERNSHIP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1k2su430f4qvk219979410h52hzr' name='INTERNSHIP.csv' table='[INTERNSHIP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='string' name='Region' ordinal='5' />
            <column datatype='string' name='Category' ordinal='6' />
            <column datatype='string' name='Sub-Category' ordinal='7' />
            <column datatype='real' name='Sales' ordinal='8' />
            <column datatype='integer' name='Quantity' ordinal='9' />
            <column datatype='real' name='Discount' ordinal='10' />
            <column datatype='real' name='Profit' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1k2su430f4qvk219979410h52hzr' name='INTERNSHIP.csv' table='[INTERNSHIP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='string' name='Region' ordinal='5' />
            <column datatype='string' name='Category' ordinal='6' />
            <column datatype='string' name='Sub-Category' ordinal='7' />
            <column datatype='real' name='Sales' ordinal='8' />
            <column datatype='integer' name='Quantity' ordinal='9' />
            <column datatype='real' name='Discount' ordinal='10' />
            <column datatype='real' name='Profit' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[INTERNSHIP.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='In max profit?' datatype='boolean' name='[Calculation_235876035982577667]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK(SUM([Profit]))&lt;[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='INTERNSHIP.csv' datatype='table' name='[__tableau_internal_object_id__].[INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5]' role='measure' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[diff:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[pcto:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[diff:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[pcto:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='max profit' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='415'>
          <calculation class='tableau' formula='415' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='INTERNSHIP.csv' id='INTERNSHIP.csv_7BFC0C7171324B3182AFCA437A9CD8C5'>
            <properties context=''>
              <relation connection='textscan.1k2su430f4qvk219979410h52hzr' name='INTERNSHIP.csv' table='[INTERNSHIP#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='string' name='Region' ordinal='5' />
                  <column datatype='string' name='Category' ordinal='6' />
                  <column datatype='string' name='Sub-Category' ordinal='7' />
                  <column datatype='real' name='Sales' ordinal='8' />
                  <column datatype='integer' name='Quantity' ordinal='9' />
                  <column datatype='real' name='Discount' ordinal='10' />
                  <column datatype='real' name='Profit' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Major cities contributing to the loss'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Major Cities Contributing To Loss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='max profit' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='415'>
              <calculation class='tableau' formula='415' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column caption='In max profit?' datatype='boolean' name='[Calculation_235876035982577667]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK(SUM([Profit]))&lt;[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_235876035982577667]' derivation='User' name='[usr:Calculation_235876035982577667:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' />
                <order field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:City:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:City:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Arlington Heights&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlett&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Baytown&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Bullhead City&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Chapel Hill&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Conroe&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Goldsboro&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Grapevine&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Hillsboro&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Keller&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Loveland&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Margate&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Oak Park&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Orange&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Saint Lucie&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Portland&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[usr:Calculation_235876035982577667:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_235876035982577667:nk:1]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[usr:Calculation_235876035982577667:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='124' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' value='88' />
            <format attr='width' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:City:nk]' value='140' />
            <format attr='height-header' value='15' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' max='0.15479999999999999' min='-13837.767399999997' num-steps='4' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' />
              <text column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk] / [federated.1hyspzu1yy1h2o139eryv10xnprv].[none:City:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D6D4B3A0-6FA2-4700-84DD-70177AAC36B8}' />
    </worksheet>
    <worksheet name='States in loss'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Major States In Loss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C1033%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                <groupfilter from='&quot;Connecticut&quot;' function='range' level='[none:State:nk]' to='&quot;District of Columbia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
                <groupfilter from='&quot;Indiana&quot;' function='range' level='[none:State:nk]' to='&quot;New York&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
                <groupfilter from='&quot;Rhode Island&quot;' function='range' level='[none:State:nk]' to='&quot;South Dakota&quot;' />
                <groupfilter from='&quot;Utah&quot;' function='range' level='[none:State:nk]' to='&quot;Wyoming&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]</column>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='1' />
            <encoding attr='space' class='0' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]' value='#ffffff' />
            <format attr='width' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]' value='48' />
            <format attr='width' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' value='76' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' value='Status&#10;'>
              <formatted-text>
                <run bold='true'>Status</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5602209568023682' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='267' />
                <format attr='maxwidth' value='267' />
                <format attr='minheight' value='200' />
                <format attr='maxheight' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5602209568023682' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5602209568023682' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk] / [federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk])</rows>
        <cols>([federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk] + [federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{9E543B06-0F71-4EC7-8443-A90929F520B7}' />
    </worksheet>
    <worksheet name='loss in Sub category performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Sub-Categories Contibuting To Loss In These States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Sub-Category:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]</column>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' value='Status&#10;'>
              <formatted-text>
                <run>Status&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk] + [federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk])</rows>
        <cols>([federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk] / [federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{729B0DD8-934A-4EC1-956F-0B4A363ED028}' />
    </worksheet>
    <worksheet name='profit &amp; discount correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Profit, discount correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]' />
              <lod column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Discount:qk]</rows>
        <cols>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{EE3CB334-418C-46C1-9391-E48A37A9CE50}' />
    </worksheet>
    <worksheet name='profit, sales correlation for these state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Profit, Sale Correlation In These States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C1033%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]' value='50' />
            <format attr='width' field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]' />
              <lod column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='377' />
                <format attr='maxwidth' value='377' />
                <format attr='minheight' value='417' />
                <format attr='maxheight' value='417' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]</rows>
        <cols>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{FD58DA42-605C-4765-9DB5-C32F9728E3A5}' />
    </worksheet>
    <worksheet name='ship mode wise segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Shipping Mode And Segment Contributing To Loss In These States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='INTERNSHIP' name='federated.1hyspzu1yy1h2o139eryv10xnprv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hyspzu1yy1h2o139eryv10xnprv'>
            <column datatype='real' default-format='C1033%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='0' />
            <format attr='line-visibility' id='refline0' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Segment:nk]' />
              <lod column='[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]</rows>
        <cols>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{C48B998D-CF2D-4983-93E9-43F44CEE8D56}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='692' maxwidth='1055' minheight='692' minwidth='1055' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97688' id='13' param='vert' w='98484' x='758' y='1156'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97688' id='11' w='98484' x='758' y='1156' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='40896' id='4' name='Major cities contributing to the loss' w='36493' x='5782' y='57081' />
        <zone h='53613' id='23' name='States in loss' w='38483' x='4455' y='10260' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='16763' id='24' name='States in loss' pane-specification-id='4' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' w='9384' x='42464' y='13728' />
        <zone h='45087' id='27' name='ship mode wise segment' w='35924' x='54692' y='10260' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13150' id='28' name='ship mode wise segment' pane-specification-id='0' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Segment:nk]' w='12038' x='77820' y='31936' />
        <zone h='40896' id='29' name='loss in Sub category performance' w='43886' x='51564' y='57659' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7514' id='30' w='100190' x='-474' y='1301'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14' underline='true'>Sample Superstore</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffff7f' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='32' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97688' id='31' param='vert' w='98484' x='758' y='1156'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7514' id='30' w='100190' x='-474' y='1301'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14' underline='true'>Sample Superstore</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53613' id='23' is-fixed='true' name='States in loss' w='38483' x='4455' y='10260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='16763' id='24' name='States in loss' pane-specification-id='4' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' w='9384' x='42464' y='13728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45087' id='27' is-fixed='true' name='ship mode wise segment' w='35924' x='54692' y='10260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13150' id='28' name='ship mode wise segment' pane-specification-id='0' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Segment:nk]' w='12038' x='77820' y='31936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40896' id='4' is-fixed='true' name='Major cities contributing to the loss' w='36493' x='5782' y='57081'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40896' id='29' is-fixed='true' name='loss in Sub category performance' w='43886' x='51564' y='57659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7416C04-08DC-48E0-B112-97757833BD96}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='States in loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1589DD49-1171-47D6-8CED-51038838E7BC}' />
    </window>
    <window class='worksheet' name='Major cities contributing to the loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='155'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:City:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[sum:Profit:qk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[usr:Calculation_235876035982577667:nk:2]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[usr:Calculation_235876035982577667:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7521E2BF-18AF-4A52-904A-9CA41E9BD1DC}' />
    </window>
    <window class='worksheet' name='profit, sales correlation for these state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A16E1BD-F436-4603-B800-9723D8E92477}' />
    </window>
    <window class='worksheet' name='profit &amp; discount correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A0963D-E9BA-4C06-B855-482428DEA3F6}' />
    </window>
    <window class='worksheet' name='ship mode wise segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Region:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Segment:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84BDA540-18A4-4802-ACAC-F9303F420641}' />
    </window>
    <window class='worksheet' name='loss in Sub category performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Category:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:State:nk]</field>
            <field>[federated.1hyspzu1yy1h2o139eryv10xnprv].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5641BC7D-74CB-4C44-8DC2-96E66EBB4B6D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Major cities contributing to the loss' />
        <viewpoint name='States in loss'>
          <highlight field='[federated.1hyspzu1yy1h2o139eryv10xnprv].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='loss in Sub category performance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ship mode wise segment'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='30' />
      <simple-id uuid='{9555EA37-47A5-46A3-A212-AA151D641F99}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Major cities contributing to the loss' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='States in loss' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='loss in Sub category performance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZm0lEQVR4nO3dSXdc553f8e+teQJQGAoTMQ8ESBAUZ0ISZdEybTkn6bbdrW6f017k5Jws
      ssw62fgNJItk6Tgni9jJwk4ndk477bRjWQMpkiAJEvM81zzPd86CaooSSYlkFUiC9/msgKpb
      //tU3fur57lTXck0TRNBsCjby26AILxMIgCCpYkACJYmAiBYmgiAxcmFOB/+vz8SzpTrXtuQ
      U1y9sQiAaajM37rK9N2lL02zub31pf9N02Bt7iaf3lrAqHuLHiUCYGVGhV/9998ycmISj80g
      FYuQzBRIrN3kl7/5v5SqCulEjEy+jKEpxCIR0rkimlIhEolSVTVKhQLpTIZCoYihK5TK8oPy
      OzM38fcNApDYvMNCFAZDTsrlEoauUanKfPjhH4hFYyja/dU9svgxt/dMjvaEqFaLRMIRSpUK
      v/z5z9lKZFCqJSLROIpmUMqliUZjVFWDXDpBMpNHlUvk83nS6QyyplMuFdGNJ+/odBzsJyy8
      0qppqt4eetrbMLQiv/yvv2B63+RffXCKaCTM1uI0v/6fv8dwtvLW2SNo9gB7eyUGWqpIDUHS
      RTv59TlG371CbGmWM8c72Xec4PJkB6AzF1X5/kUPAMGuEbwzv+fjWwU8thnePH+Om2txtEqB
      lTsfErX30u2xo6VWGH/zXxDqcLC3cI1f/O3vaBt5m3IqTiQa48b/+jsWd5KcvvJnJBeWaPNm
      8B5/n8TqIk6zQFtLgIWkl6leiLmHUCOrfO8Hf473CR+B6AGszNuKV95nfWeX8Oo98o3HGGz1
      0tzdR3tHJ25U+iam+PEH71MuVugf7MMpQUnW6R/oRSmXaAoNMHVmkrNj3fz2swgXJ9oBULJ7
      2IK9D75hlarM2Om36GIfTa4SiYSpquD0BDjSHcIw3UxMjjM8NsbC9HV2d/aYXVzi4uVvI+k6
      A0e6ae9so6K5+OFf/4TTg00YjmY6mgNoShV3Q4i2BicVRWfy/Fuc+dYVUnP/QFP3GB679MSP
      QPQAViZ5+ODHP+D2vRUGj03w9vgytrNjtLb3c2Ygj79vnIu2JSqaxLnJUf7br/8HweGLvP/+
      Je7Nb/LP/uz7VLI5XBgocoXesQm8tvsr2+baFgNDJx/Myu0LUFybo+HY9xhyV9hNK5yfPILc
      7WE/o/Hn753E67TTFLzEm/Y54rkKU5feYz2S57uXO2hxqyztpfnhX/2IuaUd2o8cp83+B/5+
      Osvf/OsJbLElirYBhjvcyI4GqoU0kull/OQoT179QRJHgoWnoVZLZAsVGpqCeFxf+d40TQr5
      HJ5AI067DTDZXlkmNDSGz/F1q18tTHLpFJrNTUtTAEn68nw0pUpJNmhq8H1tlUMdgFwuR1NT
      08tuhqUd9mVwqLcBZFn+5omEA3XYl4HYBjgAuWSYSLJAW1cvbU1f3wULz880DeLhXaqSj76u
      EJV8knRFIujWKehuutqe3DMplQI7u5HD3QO8qhKxGP6mIB6XHd0wMAwDwzTQNQ1N19FUBVlR
      Uct54ukcG0vLlBQVXdcBE103MAwdVVUxdA1FUTjEI9UDk41usJdWqKZ32YykWF5dw+GwM7e4
      hMumsB/NYBg6sqxgGAaKoqDpBmCytrCIw+8XPcBBkEs5dhIlxo52s5xx0ektYficLN3cYujM
      KJsz8xiGnZNTE2SLZTYXF0mbDijnOXd2gLszKczKHkYghJraYjNW4MK732f0SPBlv7VXSjFb
      ZHDsFI1KirmNPXb3o9jdAXb3w4T6j6DkPeTCy+RUOx0tfqZvzuBrH+afXLlAe0eQudU1EYCD
      4Gvu4O2zx3BrCfYTBfK5HD5/iP7xNxjocGEcPUFQK1AFsPsYGR6ic6Sf5bszlHI5qoZJS3MX
      o2O9/OnDKG9OTdDgF4vqq7x+N9H9ODJJvM1HGHW5OTY+jqbJDB9pYzGfRzbdvPHGMSKrdxmY
      OEt7UwATcPjamJo6IgJwENrau3DYAHcrrY49SlIzrY1tGF4XNpuN9g4bbiOAz+Oi0Qs2n8H6
      6hZDR9pY2i4wPNCHxylhc/g4fWKE5Z0kLR3dL/ttvXJae49SWJonYWvixEAb+bwTgP6+fsBL
      V5cTl+RmfnaeseMnKC3NUzUasAGmWmBmZvVw7waNx+O0t7e/7GZY2mFfBoe6B1AUhXg8/rKb
      YWnFYvFlN6EmhzoALpfrUH/7vC4O8zIQu0EFSxMBECztUA+BXjez8/MYddgnMTI0hN8njkA/
      DRGAV8jaxiaGUfuFgD3d3SIAT0kMgQRLqzkAuXicw30+oGBlNQ2BCsk9Pv3kBs0jk5wZbOba
      vUWOjZ3Faya4eW8Nb0sPo61wb2WP5p4RTo/3Yyp5Pvl0GtXu5cKpUaav38HwtnDxeBc37yzi
      bGznrXOTSKbMrWvXyckGp86fY3n6MwqGh2+9+xZeh+i4hPqoaU3SDQO3x093TyfuhjZOjA1g
      M02yiRzn3n2PFqlKuCDzzrcv45ZzaCYUYwn6T13geE8b0a0Nhi5+h7EmOxupDCenLtPj1ymo
      oBVz+HtGmTo5TnrrLoHRt3hrpJVI4f5Zk5qm1eszECyspgA0tnZzdLif+NYSeeWLxyXJRNMM
      NNPEZhrouo5hSkiAzSahqBqqoeNw2NEUFUU3cdj4/HRhE5sNJElCUzU0XcXucKErMopq4LBL
      2Gw2bDbRCwi1q2ktKmfjzC8uIeNDKoSZmVlgZuYe/u4uFq9/hNkQYqCjlRtXr+Fu7SSyvgRt
      3eTXZtnPqXQNj5NcuEZc8jPS0cXa3c8oOJpxFMIUHS04ChHurkdoHz6FLTHHXFKly+9AkiQR
      AKEuaj4ZrpTN4goGcT7FtIlEgrZQ6Guv0n8Wh/1ErK/629/+77rsBr38ziVaW1rq0KJvdtiX
      Qc3HAfzBp79IIxQK1To7QagrMY4QLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHSRAAESxMB
      ECxNBECwNBEAwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHSRAAES3ttfhw3
      HImyF96vuU5TYxNjoyN1aJFwGLw2AcgX8uzu1R4ApV0VAbAQMQQSLE0EQLA0EQDB0kQABEsT
      ARAsTQRAsDQRAMHSRAAES6tbAExTZ29ljnCuiqGrpJIJ0rkipqGRTqWRVf0fp6RUyJIvVjBN
      k0IuQ7EiY5oGuUyasqw+qCmXC2RyRUwTKsUcuUKZOtxGVxAeqNuR4OzWMiuRJM22ZjyyzPJq
      mo7eHoqxdRJFDd3WwPlTR9FLCe7MbmGaOsdHj7CwGkPXDSZGQ2zsZdA0uDB1FodW4s7MHDbJ
      oHdkhLXFdTAN3nhzikbXa3MAW3jJ6tYD+Jqb0UpFbHYHRqVEtlhAMyUqmp2Tp87QYKuimVBK
      Fhk4McFYdzvJSJTBU+cYa/WwX6gwOnGa3hYHJQW0conm3iFOHB2lGF6iZfQsZ4fbiBd0dF1H
      VVVqvLmNINRxCOTwc2pyglh4G0+wl++89w7Z3TVkTaFULlHRJGyAy2cjky6SqxTx+b3k0znS
      JZWAQ6JUKpEvqrgdYHM6KOYKFEs5HIEQpXSCZK5KwCNht9txOp1IUr1utiRYVd0CYDMV5mZn
      aQkdwYbKzI3PaOk/yvjIIMv3ZukaHGJ97jZ6Uy+ewh4VR5DuwXHMxDK20BEGewdIbc3h7RyE
      fJiCrZlOr8J2WqNnYJyQLUFSaqDd9zR3IxOEp1PzTfIeplbL4PLhfEKsisUigUCgXrP70g3a
      llZWmF9cqrlmR3s7l96cqrnO8xA3yXvx6ro16fT4vvb5eq78glAP4jiAYGkiAIKliQAIliYC
      IFiaCIBgaeKcAqFustksqUym5jqd7e34/f46tOibiQAIdRNLJJhbWKy5ztT58y8sAGIIJFia
      6AGeUqlUYmVtveY6NpuNNyZP1KFFQj2IADylqiyzsbVVcx0RgFeLCICFXL1+nVg8UXOdiWPj
      HB15PX49TwTAQgzDqMvJdobx+lyHITaCBUsTPYBwaGQyWUqVcs11An4/waYmQARAOETWtzbZ
      3tmtuc7w4CCnTk4CYggkWJwIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKliQAIliYCIFiaCIBg
      aU8MgGEYyNUyql772YOC8Kp6wrlABT78PzdIJpfx91/mn757/MW2ShBekCf0AA4im/M09Q7j
      EL/BL7zGntADeHnz3bfBH8T0tL3YFgnCC/SEHiDPH//hI3Z395m9sXygDdA09bW6wkg4XJ4Q
      AB8DA63M3LhDz8Tggc3cNFTuTX/C3FoY01BZmb9LOFV88Hw6ssX8yja6CbHtFZY3w+ImeUJd
      PRKAcm6PX/yn/8JmQsbT4KVcyB/YzEvRVTK2Nlr8HuK760iNnUTXFpANMKpZ1qIlGsizt7vO
      RgrMzD6pqvrNhQXhKT2yDeBr6uEn//Kfs7KwjM/bgDfUeWAz97b14139lGTKT6Nfp6WzDUc+
      TFUDm6IQaG6hJQDh8Dr+9tN06xqJqkGzS7+/m1aWicfj99/Ip1fp+/Wva2/T5CTx4aFHHlfW
      1+n72c9qri85ncQvXnjsc73/+eeYqlbzPCod7cSHHn0Pwd/8BvfsXM31HR/8JfHg/UsKi8Uv
      emz7p1fp+9Wvaq6vuV3EHfZHHvf//e/p++STmut7r1wh3tkBPHEjuMiND68R7GlFdw3xg++f
      qnmmjyMX06QKVQpKnIFz/cxc/xBXsJuOUpiiu41q5Do3ZJPT58+xfPMq1/HzziUndrsNu92O
      2+1+cHsemyKjrq3V3CZ/V9djb/lT3g9TqEN96aE2f1V6fQNTUWqeR6vHi/cx86gmktjr8B6C
      ikLbQ/UfLANVqcsyaLbbaXxM+7V8HupQv2lq6kGbHw2AaaIbjXzvR+9z7/YtBk4O1DzDJ/G1
      9PLut/y4XE14PHYuv9f1xXNA85vvPPh/6vKVA2uHYF2PBKCU3ObGWoEuc4uNaApjL81Id/DA
      GtDY+GJu5iYIj/PIRrBhaoQ3FvlwNstP/vo7lJLZl9EuQXghHukBAqEh3r/iRfI245AqvPtO
      98tolyC8EI8EQJJstHUc+fw/H+4X3CBBeJHED2NZSOP77+MeO1pzHe/JN+rQmleDCICFBP/q
      g5fdhFeOuCBGsDQRAMHSxBDoFRL88Y9Bq/1UCHtbax1aYw0iAK+Qzn/7b152E15pwR/9EO/p
      2k/LcT90dxsRAOHQ8J0/j+/8+brWFNsAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYmAiBYmgiA
      YGniQNhTkpwOHKFQ7XVcrjq0RqgXEYCn5D1xgtGPP3rZzRDqTAyBBEsTARAsTQRAsDQRAMHS
      RAAESxMBECxNBECwNBEAwdJEAARLEwEQLK0+AVALRFOlupQShBep5nOBTMPg1tUP2cu7ePfK
      +zR7IZvY5LMbK7T2D9MXUJhbC9PYNcy5iUFMOctHn9xCtXu4eGqUmzfuYniCXDjeya27Kzj8
      bbx98Q1sRpWbVz8jL5ucOn+GxZs3KJkuvnX5Ej7no7fPEYTnUXsPIIHT7SbQ0k2T5/5DSimP
      5AnQ1dFOpqTzzrffw68V0EwoxNIMnb3IZF870Z0tRt/8DsdbnGyl87wxdZm+JpOiCloxT0Pf
      GG+eOkZme5bgsUu8PdZOpKih6zqapmGKW0YKNarD2aASY8cncWxHuH13Ba2Y5diZCS61S8zd
      nsET9KFqCpohIQEOJ1QqKqam4nI5kCsykmLi9oKqqiiKid0ONrsNRa6iuEzsbh9qpUTF0HE3
      S9hs93MrSVLtzRcsrQ7bACbrS3Os72ToGx5g6tIFpFKGmVu3cLd1M9Ldzu3PbuDv6GZ/ZR6z
      5QiV3UViZegaGie3epOsu5HhriNszd9A9rVhz4cp2JvxyQnmt5N0Dk3izq6wmjfp9DuRJEms
      /EJd1NwDSJKNibPv0FuRaAzcv9ijMdTD26GeB9O88+79u8yk0+B3uzl14a0Hz517+1sP/p56
      6G8vEJw8y+jn/0+c++I1glAv9bkgxu6hMfDNk7W0iB9tFV4t4jiAYGkiAIKliQAIliYCIFia
      CIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpb02vw0a/Iu/wH/pUs117IGnOKdDeG28NgFwhEJ1
      +fVmwVrEEEiwNBEAwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHSRAAESxMB
      ECxNBECwNBEAwdJEAARLEwEQLE0EQLA0EQDB0p47AOVcitszsyi6AYBpmuSyaRTNwDQ04pEw
      xaqKqStEw2Eqivb5K01yqTjJbBHTNEgnomQKFUxTJxGNkC/LX8wjnyaayGCYUMgkSaTziLsi
      CfX0nNcEy8zPLqPZbFRUDZfdhVZKs7S5yUDPMWyVbXazUN2J090ERd3BTizPudPjGIUY8+tR
      JL0Kgx2s7BTQ5W1Gh1rZT1RRNvc5N3UOh1bk3sI6boeOrvezubaLw1RxXrhI0P3aXMosvGTP
      2QM4aW5ykSmWwdCJRWIY7iDDvR3YgErR4OiJY3R47eRNB+PHJmh0KOgmFNMV+o6NMtwVIhlL
      0D8xyWirh2hJZnBsgiMtLkoKqOUyLT19jA8NU46t0DxyipNDrSSLOrquo6qquEmeULPnDIBO
      c+cwI51uNvcTVMpl9IdWRrtDJ5ctk6nKOFWZYqlASZGwAR6/jVQ8T7aYJ9DgI5PMEC/INDol
      CoU82byM2wkOl5N8Ok8+n8bR2EExESGWLtPglbDb7TidTnGfMKFmzxkAO4XkNqsRhZG+bgaG
      B7GV4szPr7OwME9T/wiJtXt0Dx/j6NFR1uYX6RsdYfXeNFpTLw1yFNUbontgHEd2HW/3IAO9
      Q+R3l2jqOwq5MHkpSG+jwV7BRm//GF3uHHlXKyGvs76fgGBpkvmc4wjTNJEVBY/b/dSvKZfL
      +Hy+55ndY8Xjcdrb2+tWT3h2Dy+D5M9+RuLf/fuaax75j/+Bxu9+t+Y6T+O59wJJkvRMKz9Q
      15VfEOpB7E4R6sY1MEDDlSs113G+wF79uYdArwIxBHr5DvsyEEeCBUsTARAsTQRAsDRLBcAw
      jGeaXtO0b57oK/WfZZPKMIxnapNpmi/kPRykV639ltoLZLM9W96fdf/A89R/lqPZkiQ989Hv
      g34Pz+pVWwaWCsCzcjgO9uM56JUNDv49HLQDXwYHWv1F06vc+exT/u53v2N+bf/Bw3KhQKpQ
      AEBJ77Cf15+q3P1vW42Zax/x0Ucfsx3PPX5CJUM4WXnm5j7pGz28ucDHH39KJJ4jnk4/Orty
      jspTjgwkSYJSnD/88SOu35lH+4YRQi7/8HtUCIdTD/7L55/w/j9n6io3P/0DH338MZF0+bHT
      l0oKuVz16Rr/j+03VW5dn0b+ms5gb2cTWa5Seuh0+qdh/+lPf/rTZ3rFK6RUKuH3+794wOag
      o7ODkqwyOT7E+vwtViMF2nwO7s3fIVd10ESGuNGKGl9hZS9DqMnFrZvT6O4mmvyex8xFI1Mw
      ODYcIpyU8Ro5bt1bobWzk/TuCgsbMUJBO5GsDVPOY7ep3L55C7u/ifXZW6SqdhqdCtO3ZnA1
      hvB7vuEbzSyxsp7j/MVTODSFpcU7hBMVQq0+ZqanKeguPFoe1eWlkIyxm8iS2VtjL6PQ3hbk
      sQOkUoxK01FODneRSyVx+T2k4hnUapGNzT3QyywsLIC3mVI+hc8J0zdvYW9oIrK2ylY4RnOo
      g3QiSjDY/MRlYOoaRRXG+toIp2VMpYjLrrMwO09athF0a1y9fpeG5hDJnXn2sipBt8729g6y
      AQszt5H8LTT6XF+aRzUTI1tMUzRbsVUTzN+bxfAGUTIR7s0v4A62k4puE2gIUCqbxLfnWN3P
      0dYSYGNhjrVwlq5QA7O3pynjo7nB+8Uq8/VL4xAzDUrlKonFu0QV6B46TpORJF7QUEsZbs0v
      kwyvsb6xT8V0IJlP/mpM7K1xb2UPn9fFylaE86ePMnv9Kjt5G0e7AqzvRlm4+QkFw8Xq0irH
      z16gyW1SkXUW7s6SSMXRbW4wnqLn0avY3A3YbXYcDglfczf9AZ14roqsaazM3iOTSlNRSsyv
      xhg60kw0U8Ztt33txUKrc9PcXVwnvLOHhsrebpitlRVCff1kYklGJ98gG98nnU5TyCZQJDcY
      GjgbODbUSTqdI/2Y3uirwptLzK3HaPC779fKJAn2jqMXU6ysbjI+eRoyG0yvJNhYWSYV3SJp
      BPHrGSrm4z4jk/3wLpq9kejWErFoislzZ4lur5NO55k8d4atlUUAVKVEoVCmVJKJra2wn0kj
      S4102zUWtlZpHZikN9T4peqvbQBMUyWVzOHxOtEMk63Fu2zEKgQ8duxON41eL77GNoLBAEYp
      zdZ+4sm1DAOlUiZXquAyq3x6bZpAew96dp9bCxsEAgGOnjxNJrJDwOfi5rWrhONxskUFj9OB
      y+ujnImyn0gRjcQoZlPky8rjZ+Zoxl7e4E9/+ohIRiYQ8ONyOagUc5RkDZfLjvH5it7Z04PL
      7sDnNNnY2ED5mgCMvXGRMydG8dqqXP34M5IlBX+wneYGDy63F7fbhcNxf3Vwu33IhTi7kRS+
      QAMOhxP7511LOh6nXCkTTz0+DKZhIJcLFD4fitgcTvweDw6HE7ekMjMzg+FposEt0drahtPt
      4UhXBw6XH72cYOehIdf95WiQLeq0BBvwIlOulrh+9Rq6049aznDj6jUcgZaHXqGQTBZwu1wY
      cP/zczpoCARYnb3JZiRJNBIjn0lQrGr8f5zr+7dzJ1eBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='profit &amp; discount correlation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit, sales correlation for these state' width='192'>
      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
      jGobwP8PSEdTIup3fOIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ship mode wise segment' width='192'>
      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
      SS2bAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
